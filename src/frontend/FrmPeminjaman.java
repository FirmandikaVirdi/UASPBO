/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package frontend;

import backend.*;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;

/**
 *
 * @author LENOVO
 */
public class FrmPeminjaman extends javax.swing.JFrame {

    private ArrayList<Anggota> listAnggota = new ArrayList<>();
    private ArrayList<Buku> listBuku = new ArrayList<>();

    /**
     * Creates new form FrmPeminjaman
     */
    public FrmPeminjaman() {
        initComponents();
        tampilkanComboAnggota();
        tampilkanComboBuku();
        tampilkanData();
        kosongkanForm();

    }

    public String formatTanggal(String input) {
        try {
            // Ubah format agar fleksibel menerima 1 digit atau 2 digit
            SimpleDateFormat sdfInput = new SimpleDateFormat("yyyy/M/d");
            sdfInput.setLenient(false); // validasi ketat tetap diaktifkan

            Date date = sdfInput.parse(input); // bisa terima 1 digit bulan/tanggal
            SimpleDateFormat sdfOutput = new SimpleDateFormat("yyyy-MM-dd");
            return sdfOutput.format(date);
        } catch (Exception e) {
            return null;
        }
    }

    private void setTanggalPinjamAktif(boolean aktif) {
        txtTglPinjam.setEnabled(aktif);  // tanggal pinjam aktif
    }

    private void setTanggalKembaliAktif(boolean aktif) {
        txtTglKembali.setEnabled(aktif);  // tanggal kembali aktif
    }

    public void kosongkanForm() {
        txtIdPeminjaman.setText("0");
        cmbAnggota.setSelectedIndex(0);
        cmbBuku.setSelectedIndex(0);
        txtTglPinjam.setText("");
        txtTglKembali.setText("");
        setTanggalKembaliAktif(false); // ⛔️ tidak bisa diisi saat form baru
        setTanggalPinjamAktif(true);
    }

    public void tampilkanData() {
        String[] kolom = {"ID", "Nama Anggota", "Judul Buku", "Tanggal Pinjam", "Tanggal Kembali", "Status"};
        ArrayList<Peminjaman> list = new Peminjaman().getAll();
        Object rowData[][] = new Object[list.size()][6];

        for (int i = 0; i < list.size(); i++) {
            rowData[i][0] = list.get(i).getIdPeminjaman();
            rowData[i][1] = list.get(i).getAnggota().getNama();
            rowData[i][2] = list.get(i).getBuku().getJudul();
            rowData[i][3] = list.get(i).getTanggalpinjam();
            rowData[i][4] = list.get(i).getTanggalkembali();

            String status = list.get(i).getStatus();
            if ("0".equals(status)) {
                rowData[i][5] = "Dipinjam";
            } else if ("1".equals(status)) {
                rowData[i][5] = "Dikembalikan";
            } else {
                rowData[i][5] = "Tidak diketahui";
            }

        }

        tblPeminjaman.setModel(new DefaultTableModel(rowData, kolom));
    }

    public String konversiKeInput(String tglDatabase) {
        if (tglDatabase == null || tglDatabase.isEmpty()) {
            return "";
        }
        try {
            SimpleDateFormat sdfDb = new SimpleDateFormat("yyyy-MM-dd");
            SimpleDateFormat sdfInput = new SimpleDateFormat("yyyy/MM/dd");
            Date tgl = sdfDb.parse(tglDatabase);
            return sdfInput.format(tgl);
        } catch (Exception e) {
            return tglDatabase;
        }
    }

    public void tampilkanComboAnggota() {
        cmbAnggota.removeAllItems();          // kosongkan dulu
        listAnggota = new Anggota().getAll(); // ambil semua anggota dari DB

        for (Anggota a : listAnggota) {
            cmbAnggota.addItem(a.getIdAnggota() + " - " + a.getNama()); // hanya tampilkan string
        }
    }

    public void tampilkanComboBuku() {
        cmbBuku.removeAllItems();           // kosongkan dulu
        listBuku = new Buku().getAll();     // ambil semua buku dari DB

        for (Buku b : listBuku) {
            cmbBuku.addItem(b.getIdBuku() + " - " + b.getJudul()); // hanya tampilkan string
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnCari = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblPeminjaman = new javax.swing.JTable();
        txtIdPeminjaman = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtTglPinjam = new javax.swing.JTextField();
        txtTglKembali = new javax.swing.JTextField();
        btnSimpan = new javax.swing.JButton();
        txtCari = new javax.swing.JTextField();
        btnTambahBaru = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        cmbAnggota = new javax.swing.JComboBox<>();
        cmbBuku = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        btnPengembalian = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnCari.setText("Cari");
        btnCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCariActionPerformed(evt);
            }
        });

        btnHapus.setText("Hapus");
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });

        jLabel1.setText("ID Buku");

        jLabel4.setText("ID");

        tblPeminjaman.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblPeminjaman.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPeminjamanMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblPeminjaman);

        txtIdPeminjaman.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdPeminjamanActionPerformed(evt);
            }
        });

        jLabel5.setText("ID Angguta");

        jLabel2.setText("Tanggal Pinjam");

        jLabel3.setText("Tanggal Kembali");

        txtTglPinjam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTglPinjamActionPerformed(evt);
            }
        });

        txtTglKembali.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTglKembaliActionPerformed(evt);
            }
        });

        btnSimpan.setText("Simpan");
        btnSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpanActionPerformed(evt);
            }
        });

        btnTambahBaru.setText("Tanbah Baru");
        btnTambahBaru.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTambahBaruActionPerformed(evt);
            }
        });

        jLabel8.setText("YYYY/MM/DD");

        jLabel9.setText("YYYY/MM/DD");

        cmbAnggota.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbAnggota.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbAnggotaActionPerformed(evt);
            }
        });

        cmbBuku.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbBuku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbBukuActionPerformed(evt);
            }
        });

        jButton1.setText("Refresh");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btnPengembalian.setText("Pengembalian");
        btnPengembalian.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPengembalianActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 416, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(btnSimpan, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(btnTambahBaru, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnHapus, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(txtCari, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(btnCari, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(btnPengembalian, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGap(0, 0, 0)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(jLabel4))
                            .addComponent(jLabel5)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmbBuku, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(cmbAnggota, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtTglKembali, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtTglPinjam, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtIdPeminjaman, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel9))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtIdPeminjaman, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cmbAnggota, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cmbBuku, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtTglPinjam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTglKembali, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel9))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSimpan)
                    .addComponent(btnTambahBaru)
                    .addComponent(btnHapus))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCari)
                    .addComponent(jButton1)
                    .addComponent(btnPengembalian))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCariActionPerformed
        String keyword = txtCari.getText().trim();
        ArrayList<Peminjaman> list = new Peminjaman().search(keyword);

        String[] kolom = {"ID", "Nama Anggota", "Judul Buku", "Tanggal Pinjam", "Tanggal Kembali", "Status"};
        Object[][] rowData = new Object[list.size()][6];

        for (int i = 0; i < list.size(); i++) {
            rowData[i][0] = list.get(i).getIdPeminjaman();
            rowData[i][1] = list.get(i).getAnggota().getNama();
            rowData[i][2] = list.get(i).getBuku().getJudul();
            rowData[i][3] = list.get(i).getTanggalpinjam();
            rowData[i][4] = list.get(i).getTanggalkembali();
            rowData[i][5] = "0".equals(list.get(i).getStatus()) ? "Dipinjam" : "Dikembalikan";
        }

        tblPeminjaman.setModel(new javax.swing.table.DefaultTableModel(rowData, kolom));
    }//GEN-LAST:event_btnCariActionPerformed

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
        DefaultTableModel model = (DefaultTableModel) tblPeminjaman.getModel();
        int row = tblPeminjaman.getSelectedRow();
        int id = Integer.parseInt(model.getValueAt(row, 0).toString());

        Peminjaman pem = new Peminjaman().getById(id);
        pem.delete();
        kosongkanForm();
        tampilkanData();

    }//GEN-LAST:event_btnHapusActionPerformed

    private void tblPeminjamanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPeminjamanMouseClicked
        DefaultTableModel model = (DefaultTableModel) tblPeminjaman.getModel();
        int row = tblPeminjaman.getSelectedRow();

        if (row >= 0) {
            String id = model.getValueAt(row, 0).toString();
            Peminjaman pem = new Peminjaman().getById(Integer.parseInt(id));

            txtIdPeminjaman.setText(String.valueOf(pem.getIdPeminjaman()));
            cmbAnggota.setSelectedItem(pem.getAnggota());
            cmbBuku.setSelectedItem(pem.getBuku());
            txtTglPinjam.setText(pem.getTanggalpinjam().replace("-", "/"));

            // Konversi tanggalkembali jika tidak null
            if (pem.getTanggalkembali() != null) {
                txtTglKembali.setText(konversiKeInput(pem.getTanggalkembali())); // dari yyyy-MM-dd ke yyyy/MM/dd
            } else {
                txtTglKembali.setText("");
            }

            setTanggalPinjamAktif(false); // ⛔ Nonaktifkan field tanggal pinjam

            // Kondisional aktif/nonaktifkan tanggal kembali
            if ("0".equals(pem.getStatus())) {
                setTanggalKembaliAktif(true);  // aktif saat buku masih dipinjam
            } else {
                setTanggalKembaliAktif(false); // nonaktif saat sudah dikembalikan
            }
        }


    }//GEN-LAST:event_tblPeminjamanMouseClicked

    private void txtIdPeminjamanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdPeminjamanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdPeminjamanActionPerformed

    private void txtTglPinjamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTglPinjamActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTglPinjamActionPerformed

    private void txtTglKembaliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTglKembaliActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTglKembaliActionPerformed

    private void btnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanActionPerformed
        int indexAnggota = cmbAnggota.getSelectedIndex();
        int indexBuku = cmbBuku.getSelectedIndex();
        int idAwal = Integer.parseInt(txtIdPeminjaman.getText());

        Anggota ang = listAnggota.get(indexAnggota);
        Buku buk = listBuku.get(indexBuku);

        // Ambil input tanggal dari field
// Ambil input tanggal dari form
        String tglPinjam = txtTglPinjam.getText().trim();
        String tglKembali = txtTglKembali.getText().trim();

        String tglPinjamDB = formatTanggal(tglPinjam);
        String tglKembaliDB = null;

// Validasi tanggal pinjam wajib diisi
        if (tglPinjam.isEmpty() || tglPinjamDB == null) {
            JOptionPane.showMessageDialog(this, "Tanggal pinjam wajib diisi dan harus dalam format yyyy/MM/dd");
            return;
        }

// Kalau ID masih 0, berarti peminjaman baru (boleh kosong tanggal kembali)
        if (idAwal == 0) {
            // kosongkan tanggal kembali
            tglKembaliDB = null;
        } else {
            // proses update/pengembalian → tanggal kembali WAJIB diisi dan valid
            if (tglKembali.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Tanggal kembali wajib diisi saat proses pengembalian!");
                return;
            }

            tglKembaliDB = formatTanggal(tglKembali);
            if (tglKembaliDB == null) {
                JOptionPane.showMessageDialog(this, "Tanggal yang anda masukan tidak valid!");
                return;
            }

            // Validasi logika tanggal kembali ≥ tanggal pinjam
            try {
                SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
                Date dPinjam = sdf.parse(tglPinjamDB);
                Date dKembali = sdf.parse(tglKembaliDB);

                if (dKembali.before(dPinjam)) {
                    JOptionPane.showMessageDialog(this, "Tanggal kembali tidak boleh lebih awal dari tanggal pinjam!");
                    return;
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Kesalahan saat memproses tanggal.");
                return;
            }
        }

        // Buat dan simpan objek peminjaman
        Peminjaman pem = new Peminjaman();
        pem.setIdPeminjaman(idAwal);
        pem.setAnggota(ang);
        pem.setBuku(buk);
        pem.setTanggalpinjam(tglPinjamDB);
        pem.setTanggalkembali(tglKembaliDB);
        pem.setStatus("0");
        pem.save();

        if (idAwal == 0) {
            // data baru → pasti peminjaman
            JOptionPane.showMessageDialog(this, "Peminjaman berhasil disimpan.");
        } else {
            if ("1".equals(pem.getStatus())) {
                JOptionPane.showMessageDialog(this, "Pengembalian berhasil disimpan.");
            } else {
                JOptionPane.showMessageDialog(this, "Data peminjaman diperbarui (belum dikembalikan).");
            }
        }

        // Refresh form
        txtIdPeminjaman.setText(String.valueOf(pem.getIdPeminjaman()));
        tampilkanData();
        kosongkanForm();
    }//GEN-LAST:event_btnSimpanActionPerformed

    private void btnTambahBaruActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTambahBaruActionPerformed
        kosongkanForm();
    }//GEN-LAST:event_btnTambahBaruActionPerformed

    private void cmbAnggotaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbAnggotaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbAnggotaActionPerformed

    private void cmbBukuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbBukuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbBukuActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        tampilkanData();        // tampilkan semua data peminjaman
        txtCari.setText("");    // kosongkan kotak pencarian

    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnPengembalianActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPengembalianActionPerformed
        int row = tblPeminjaman.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(this, "Pilih data peminjaman dari tabel terlebih dahulu!");
            return;
        }

        int idPeminjaman = Integer.parseInt(tblPeminjaman.getValueAt(row, 0).toString());
        Peminjaman pem = new Peminjaman().getById(idPeminjaman);

// Cegah pengembalian ulang
        if ("1".equals(pem.getStatus())) {
            setTanggalKembaliAktif(false); // tetap nonaktifkan kalau sudah dikembalikan
            JOptionPane.showMessageDialog(this, "Data ini sudah dikembalikan!");
            return;
        }

        setTanggalKembaliAktif(true); // ✅ aktifkan field untuk proses pengembalian

        String tglKembaliInput = txtTglKembali.getText().trim();

// Validasi kosong
        if (tglKembaliInput.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Tanggal kembali tidak boleh kosong!");
            return;
        }

// Validasi format yyyy/MM/dd
        if (!tglKembaliInput.matches("\\d{4}/\\d{1,2}/\\d{1,2}")) {
            JOptionPane.showMessageDialog(this, "Format tanggal salah! Gunakan format yyyy/MM/dd (misal: 2025/12/01)");
            return;
        }

        String tglPinjam = pem.getTanggalpinjam(); // dari DB: yyyy-MM-dd
        String tglKembaliDB = formatTanggal(tglKembaliInput); // konversi: yyyy/MM/dd → yyyy-MM-dd

        if (tglKembaliDB == null) {
            JOptionPane.showMessageDialog(this, "Tanggal yang anda masukan tidak valid!");
            return;
        }

        try {
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");

            Date tglKembaliDate = sdf.parse(tglKembaliDB);
            Date tglPinjamDate = sdf.parse(tglPinjam);

            if (tglKembaliDate.before(tglPinjamDate)) {
                JOptionPane.showMessageDialog(this, "Tanggal kembali tidak boleh lebih awal dari tanggal pinjam!");
                return;
            }

            // Proses pengembalian
            pem.setTanggalkembali(tglKembaliDB);
            pem.setStatus("1"); // tandai sebagai sudah dikembalikan
            pem.save();

            JOptionPane.showMessageDialog(this, "Proses pengembalian berhasil disimpan.");

            tampilkanData();
            kosongkanForm();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Kesalahan saat memproses tanggal.");
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnPengembalianActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmPeminjaman.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmPeminjaman.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmPeminjaman.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmPeminjaman.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new FrmPeminjaman().setVisible(true);
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCari;
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnPengembalian;
    private javax.swing.JButton btnSimpan;
    private javax.swing.JButton btnTambahBaru;
    private javax.swing.JComboBox<String> cmbAnggota;
    private javax.swing.JComboBox<String> cmbBuku;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblPeminjaman;
    private javax.swing.JTextField txtCari;
    private javax.swing.JTextField txtIdPeminjaman;
    private javax.swing.JTextField txtTglKembali;
    private javax.swing.JTextField txtTglPinjam;
    // End of variables declaration//GEN-END:variables
}
